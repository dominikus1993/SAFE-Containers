version: '3.3'

services:
  identity.api:
    image: safe_shop/identity.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - API_URL=http://0.0.0.0:80
      - PATH_BASE=/identity
  basket.api:
    image: safe_shop/basket.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - API_URL=http://0.0.0.0:80
      - REDIS_CONNECTION=basket.data:6379
      - PATH_BASE=/basket
    depends_on:
      - basket.data
  catalog.api:
    image: safe_shop/catalog.api:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - API_URL=http://0.0.0.0:80
      - MONGO_CONNECTION=mongodb://catalog.data:27017
      - PATH_BASE=/catalog
    depends_on:
      - catalog.data
  catalog.import:
    image: safe_shop/catalog.import:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.Import/Dockerfile
    environment:
      - Service__Quantity=10000
      - Service__ConnectionString=mongodb://catalog.data:27017
    depends_on:
      - catalog.data
  shopping.apigw:
    image: safe_shop/shopping.apigw:${TAG:-latest}
    build:
      context: .
      dockerfile: src/ApiGateways/Web.Bff.Shopping/apigw/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - identity.api
      - catalog.api
      - basket.api
  catalog.data:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - catalog:/data/db
  basket.data:
    image: redis
    ports:
      - "6379:6379"
  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    volumes:
        - "portainer:/data"
        - "/var/run/docker.sock:/var/run/docker.sock"
volumes:
  catalog:
    external: true
  portainer:
    external: true
